resources:
  - name: S_HelmDeploy_0036_ReleaseBundle_resource
    type: ReleaseBundle
    configuration:
      sourceDistribution: s_distribution
      name: name
      version: '1'

pipelines:
  - name: S_HelmDeploy_ReleaseBundle_0036
    configuration:
      environmentVariables:
        readOnly:
          RELEASE_NAME: "simplehelm-generic-${run_id}"
          K8S_NAMESPACE: "pipe-master-pool"
          BUNDLE_VERSION: "1"
          BUNDLE_NAME: helm_bundle_not_exist
    steps:
      - name: S_HelmDeploy_0036_build_charts
        type: Bash
        configuration:
          integrations:
            - name: s_artifactory
          outputResources:
            - name: S_HelmDeploy_0036_ReleaseBundle_resource
        execution:
          onExecute:
            - write_output S_HelmDeploy_0036_ReleaseBundle_resource name=$BUNDLE_NAME version=$BUNDLE_VERSION

      - name: deploy_helm_chart_from_generic_repo
        type: HelmDeploy
        configuration:
          integrations:
            - name: s_artifactory
            - name: s_kubernetes
          inputResources:
            - name: S_HelmDeploy_0036_ReleaseBundle_resource
          helmVersion: 3
          releaseName: ${RELEASE_NAME}
          chartPath: helmgeneric/simplehelm
          flags: "--force --wait --timeout 900s --set image.repository=trriplejay/simplehelm --set image.tag=latest"
          valueFilePaths:
            - values.yaml
          lint: true
          lintFlags: "--strict"
          test: true
        execution:
          onComplete:
            - echo "Deleting artifactory repository..."
            - jfrog rt repo-delete helmgeneric --quiet || true
            - echo "Deleting helm resources..."
            - helm3 delete simplehelm-generic-$run_id --namespace $K8S_NAMESPACE


