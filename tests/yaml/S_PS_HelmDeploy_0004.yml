resources:
  - name: S_PS_HelmDeploy_FileSpec_0004_helm_res
    type: FileSpec
    configuration:
      sourceArtifactory: s_artifactory
      pattern: >-
        simplecharts/
      recursive: true

  - name: S_PS_HelmDeploy_GitRepo_0004
    type: GitRepo
    configuration:
      gitProvider: s_gitHub
      path: jfbetapipeorg/Org_test_Automation
      branches:
        include: master

pipelines:
  - name: S_PS_HelmDeploy_FileSpec_0004_helm
    configuration:
      runtime:
        type: image
        image:
          custom:
            name: releases-docker.jfrog.io/jfrog/pipelines-w19cpp
            tag: 9.0.1
            registry: docker_registry
            autoPull: true
      environmentVariables:
        readOnly:
          release_name_from_helm_repo: "simplehelm-from-repo-${run_id}"
          k8s_namespace: "pipe-master-pool"
      nodePool: win_2019
    steps:
      - name: trigger_pipeline_S_PS_HelmDeploy_0004
        type: PowerShell
        configuration:
          integrations:
            - name: s_artifactory
          inputResources:
            - name: S_PS_HelmDeploy_GitRepo_0004
              trigger: true
        execution:
          onExecute:
            - jfrog --version
            - $json = @{key="helmgeneric";rclass="local";packageType="generic";description="This repo is a test repo used by test automation";repoLayoutRef="simple-default"} | ConvertTo-Json -Compress  | Out-File c:\myrequest.json -Encoding Ascii -Force
            - jfrog rt repo-create c:\myrequest.json
            - jfrog rt u $res_S_PS_HelmDeploy_GitRepo_0004_resourcePath/files/simplehelm-0.3.0.tgz "helmgeneric/" --explode
            - $json = @{key="simplecharts";rclass="local";packageType="helm";description="This repo is a test repo used by test automation";repoLayoutRef="simple-default"} | ConvertTo-Json -Compress  | Out-File c:\myrequest.json -Encoding Ascii -Force
            - jfrog rt repo-create c:\myrequest.json
            - jfrog rt u $res_S_PS_HelmDeploy_GitRepo_0004_resourcePath/files/simplehelm-0.3.0.tgz "simplecharts/"
            - jfrog rt u $res_S_PS_HelmDeploy_GitRepo_0004_resourcePath/files/index.yaml "simplecharts/"

      - name: deploy_helm_chart_from_helm_repo
        type: HelmDeploy
        configuration:
          inputSteps:
            - name: trigger_pipeline_S_PS_HelmDeploy_0004
          integrations:
            - name: s_kubernetes
          inputResources:
            - name: S_PS_HelmDeploy_FileSpec_0004_helm_res
          helmVersion: 3
          releaseName: ${release_name_from_helm_repo}
          chartPath: ./doesntExist/
          chartName: simplehelm
          chartVersion: 0.3.0
          flags: "--wait --timeout 900s -n ${k8s_namespace} --set image.repository=trriplejay/simplehelm --set image.tag=latest"
          valueFilePaths:
            - values.yaml
          lint: true
          lintFlags: "--strict"
          test: true
        execution:
          onComplete:
            - jfrog rt repo-delete simplecharts --quiet
            - helm3 delete simplehelm-from-repo-$run_id --namespace $k8s_namespace
