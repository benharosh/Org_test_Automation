resources:
  - name: S_PS_HelmDeploy_BuildInfo_0005
    type: BuildInfo
    configuration:
      sourceArtifactory: s_artifactory
      buildName: helmbuild
      buildNumber: 1

  - name: S_PS_HelmDeploy_GitRepo_0005
    type: GitRepo
    configuration:
      gitProvider: s_gitHub
      path: benharosh/Org_test_Automation
      branches:
        include: feature-PIPE-4901-custom

pipelines:
  - name: S_PS_HelmDeploy_BuildInfo_0005_generic
    configuration:
      runtime:
        type: image
        image:
          custom:
            name: releases-docker.jfrog.io/jfrog/pipelines-w19cpp
            tag: 9.0.1
            registry: docker_registry
            autoPull: true
      environmentVariables:
        readOnly:
          release_name_generic: "simplehelm-generic-${run_id}"
          k8s_namespace: "pipe-master-pool"
      nodePool: win_2019
    steps:
      - name: S_PS_HelmDeploy_0005_create_build
        type: PowerShell
        configuration:
          integrations:
            - name: s_artifactory
          inputResources:
            - name: S_PS_HelmDeploy_GitRepo_0005
          outputResources:
            - name: S_PS_HelmDeploy_BuildInfo_0005
        execution:
          onExecute:
            - jfrog --version
            - $json = @{key="helmgeneric";rclass="local";packageType="generic";description="This repo is a test repo used by test automation";repoLayoutRef="simple-default"} | ConvertTo-Json -Compress  | Out-File c:\myrequest.json -Encoding Ascii -Force
            - jfrog rt repo-create c:\myrequest.json
            - cd $res_S_PS_HelmDeploy_GitRepo_0005_resourcePath/tests/core/helmdeploy
            - jfrog rt u simplehelm/ "helmgeneric/" --flat=false --build-name=$JFROG_CLI_BUILD_NAME --build-number=${JFROG_CLI_BUILD_NUMBER}
            - jfrog rt bce ${JFROG_CLI_BUILD_NAME} ${JFROG_CLI_BUILD_NUMBER}
            - jfrog rt bp ${JFROG_CLI_BUILD_NAME} ${JFROG_CLI_BUILD_NUMBER}
            - write_output S_PS_HelmDeploy_BuildInfo_0005 buildName=${JFROG_CLI_BUILD_NAME} buildNumber=${JFROG_CLI_BUILD_NUMBER}
          onFailure:
            - jfrog rt repo-delete helmgeneric --quiet

      - name: deploy_helm_chart_from_generic_repo
        type: HelmDeploy
        configuration:
          inputSteps:
            - name: S_PS_HelmDeploy_0005_create_build
          integrations:
            - name: s_artifactory
            - name: s_kubernetes
          inputResources:
            - name: S_PS_HelmDeploy_BuildInfo_0005
          helmVersion: 3
          releaseName: ${release_name_generic}
          chartPath: simplehelm/
          flags: "--force --wait --timeout 900s --set image.repository=trriplejay/simplehelm --set image.tag=latest"
          valueFilePaths:
            - values.yaml
          lint: true
          lintFlags: "--strict"
          test: true
        execution:
          onComplete:
            - jfrog rt repo-delete helmgeneric --quiet
            - helm3 delete simplehelm-generic-$run_id --namespace $k8s_namespace


