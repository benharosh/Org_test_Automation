resources:

  - name: simpleHelmFileSpecGeneric_onestep
    type: FileSpec
    configuration:
      sourceArtifactory: ben_rt
      pattern: >-
        helmgeneric/
      recursive: true

  - name: simpleHelmFileSpecGenericHelmRepo_onestep
    type: FileSpec
    configuration:
      sourceArtifactory: ben_rt
      pattern: >-
        simplecharts/
      recursive: true

  - name: simplehelmRepo_chart_onestep
    type: GitRepo
    configuration:
      gitProvider: s_gitHub
      path: benharosh/Org_test_Automation
      branches:
        include: PIPE-4819

pipelines:
  - name: helm_file_spec_onestep
    configuration:
      environmentVariables:
        readOnly:
          release_name_generic: "simplehelm-generic-${run_id}"
          release_name_from_helm_repo: "simplehelm-from-repo-${run_id}"
          k8s_namespace: "pipe-master-pool"
    steps:
      - name: trigger_flow
        type: Bash
        configuration:
          integrations:
            - name: ben_rt
          inputResources:
            - name: simplehelmRepo_chart_onestep
              trigger: false
        execution:
          onExecute:
            - jfrog rt c artifactory --url=${int_ben_rt_url} --user=${int_ben_rt_user} --apikey=${int_ben_rt_apikey}
            - jfrog rt use artifactory
            - request1='{"key":"helmgeneric", "rclass":"local", "packageType":"generic", "description":"This repo is a test repo used by test autmation", "repoLayoutRef":"simple-default"}'
            - echo $request1 > request1.json
            - jfrog rt repo-delete helmgeneric || true
            - jfrog rt repo-create request1.json
            - jfrog rt u ${res_simplehelmRepo_chart_onestep_resourcePath}/tests/core/helmdeploy/simplehelm-0.3.0.tgz "helmgeneric/" --explode
            - request2='{"key":"simplecharts", "rclass":"local", "packageType":"helm", "description":"This repo is a test repo used by test autmation", "repoLayoutRef":"simple-default"}'
            - echo $request2 > request2.json
            - jfrog rt repo-delete simplecharts || true
            - jfrog rt repo-create request2.json
            - jfrog rt u ${res_simplehelmRepo_chart_onestep_resourcePath}/tests/core/helmdeploy/simplehelm-0.3.0.tgz "simplecharts/"
            - jfrog rt u ${res_simplehelmRepo_chart_onestep_resourcePath}/tests/core/helmdeploy/index.yaml "simplecharts/"
          onFailure:
            - jfrog rt repo-delete helmgeneric || true
            - jfrog rt repo-delete simplecharts

      - name: deploy_helm_chart_generic
        type: HelmDeploy
        configuration:
          integrations:
            - name: ben_rt
            - name: k8s
          inputSteps:
            - name: trigger_flow
          inputResources:
            - name: simpleHelmFileSpecGeneric_onestep
          chartPath: ./simplehelm/
          helmVersion: 3
          releaseName: ${release_name_generic}
          flags: "--force --wait --timeout 900s --set image.repository=trriplejay/simplehelm --set image.tag=latest"
          valueFilePaths:
            - values.yaml
          # dryRun: true
          lint: true
          lintFlags: "--strict"
          test: true
        execution:
          onStart:
            - ls -l $res_simpleHelmFileSpec_resourcePath
            - export HELM_VERSION=3.4.0
            - echo "================= Adding helm cli $HELM_VERSION ======================================"
            - curl -sSL -o helm.tar.gz https://get.helm.sh/helm-v"$HELM_VERSION"-linux-amd64.tar.gz
            - tar xzvf helm.tar.gz
            - chmod +x ./linux-amd64/helm
            - sudo mv ./linux-amd64/helm /usr/local/bin/helm3
          onFailure:
            - jfrog rt c artifactory --url=${int_ben_rt_url} --user=${int_ben_rt_user} --apikey=${int_ben_rt_apikey}
            - jfrog rt use artifactory
            - jfrog rt repo-delete helmgeneric

      - name: deploy_helm_chart_from_helm_repo
        type: HelmDeploy
        configuration:
          inputSteps:
            - name: trigger_flow
          integrations:
            - name: ben_rt
            - name: k8s
          inputResources:
            - name: simpleHelmFileSpecGenericHelmRepo_onestep
          chartPath: ./
          chartName: simplehelm
          chartVersion: 0.3.0
          helmVersion: 3
          releaseName: ${release_name_from_helm_repo}
          flags: "--wait --timeout 900s -n ${k8s_namespace} --set image.repository=trriplejay/simplehelm --set image.tag=latest"
          valueFilePaths:
            - values.yaml
          # dryRun: true
          lint: true
          lintFlags: "--strict"
          test: true
        execution:
          onStart:
            - ls -l $res_simpleHelmFileSpec_resourcePath
            - export HELM_VERSION=3.4.0
            - echo "================= Adding helm cli $HELM_VERSION ======================================"
            - curl -sSL -o helm.tar.gz https://get.helm.sh/helm-v"$HELM_VERSION"-linux-amd64.tar.gz
            - tar xzvf helm.tar.gz
            - chmod +x ./linux-amd64/helm
            - sudo mv ./linux-amd64/helm /usr/local/bin/helm3
          onFailure:
            - jfrog rt c artifactory --url=${int_ben_rt_url} --user=${int_ben_rt_user} --apikey=${int_ben_rt_apikey}
            - jfrog rt use artifactory
            - jfrog rt repo-delete simplecharts

      - name: clean_helm_deploy_generic
        type: Bash
        configuration:
          integrations:
            - name: ben_rt
            - name: k8s
          inputSteps:
            - name: deploy_helm_chart_generic
        execution:
          onStart:
            - ls -l $res_simpleHelmFileSpec_resourcePath
            - export HELM_VERSION=3.4.0
            - echo "================= Adding helm cli $HELM_VERSION ======================================"
            - curl -sSL -o helm.tar.gz https://get.helm.sh/helm-v"$HELM_VERSION"-linux-amd64.tar.gz
            - tar xzvf helm.tar.gz
            - chmod +x ./linux-amd64/helm
            - sudo mv ./linux-amd64/helm /usr/local/bin/helm3
          onExecute:
            - jfrog rt c artifactory --url=${int_ben_rt_url} --user=${int_ben_rt_user} --apikey=${int_ben_rt_apikey}
            - jfrog rt use artifactory
            - jfrog rt repo-delete helmgeneric || true
            - helm3 delete ${release_name_generic} --namespace ${k8s_namespace}

      - name: clean_helm_deploy_from_helm_repo
        type: Bash
        configuration:
          integrations:
            - name: ben_rt
            - name: k8s
          inputSteps:
            - name: deploy_helm_chart_from_helm_repo
        execution:
          onStart:
            - ls -l $res_simpleHelmFileSpec_resourcePath
            - export HELM_VERSION=3.4.0
            - echo "================= Adding helm cli $HELM_VERSION ======================================"
            - curl -sSL -o helm.tar.gz https://get.helm.sh/helm-v"$HELM_VERSION"-linux-amd64.tar.gz
            - tar xzvf helm.tar.gz
            - chmod +x ./linux-amd64/helm
            - sudo mv ./linux-amd64/helm /usr/local/bin/helm3
          onExecute:
            - jfrog rt c artifactory --url=${int_ben_rt_url} --user=${int_ben_rt_user} --apikey=${int_ben_rt_apikey}
            - jfrog rt use artifactory
            - jfrog rt repo-delete simplecharts || true
            - helm3 delete ${release_name_from_helm_repo} --namespace ${k8s_namespace}

